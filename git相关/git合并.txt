
.gitigonre 你想要忽略的文件或者目录

/mtk/ 过滤整个文件夹
*.zip 过滤所有.zip文件
/mtk/do.c 过滤某个具体文件
.gitattribute 用于设置文件的对比方式（常用非文本文件）

# 用git合并分支时，如何保持某些文件不被合并
假设现在有两个分支，需要将http分支合并到master，但忽略文件‘jar/sim.jar’和‘jar/py.py’
gswyhq@gswyhq-pc:~/qa_jar$ git branch 
* http
  master

# 查看当前`http`分支跟`master`分支有哪些文件不同：
gswyhq@gswyhq-pc:~/qa_jar$ git diff master --stat
 jar/py.py             |  12 +++++++-----
 jar/sim.jar           | Bin 8553547 -> 8553547 bytes
 tornado_jar_server.py |   2 +-
 3 files changed, 8 insertions(+), 6 deletions(-)

第一步：创建我们的自定义merge driver：
gswyhq@gswyhq-pc:~/qa_jar$ git config --global merge.ours.driver true

第二步：在要被merge的分支上创建.gitattributes 文件，并且在文件中置顶不merge的文件名：
gswyhq@gswyhq-pc:~/qa_jar$ vim .gitattributes
jar/sim.jar merge=ours
jar/py.py merge=ours

第三步：回到要合并到的`master`分支
gswyhq@gswyhq-pc:~/qa_jar$ git checkout master 
切换到分支 'master'
您的分支与上游分支 'origin/master' 一致。

第四步：将`http`分支合并到`master`分支：
gswyhq@gswyhq-pc:~/qa_jar$ git merge http 
自动合并 tornado_jar_server.py
Merge made by the 'recursive' strategy.
 tornado_jar_server.py | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)


# 合并某个分支上的单个commit
git checkout master  
git cherry-pick 62ecb3  
现在62ecb3 就被合并到master分支，并在master中添加了commit（作为一个新的commit）

# 合并某个分支上的一系列commits
假设你需要合并feature分支的commit76cada ~62ecb3 到master分支。
首先需要基于feature创建一个新的分支，并指明新分支的最后一个commit：
git checkout -bnewbranch 62ecb3  
然后，rebase这个新分支的commit到master（--ontomaster）。76cada^ 指明你想从哪个特定的commit开始。
git rebase --ontomaster 76cada^  
得到的结果就是feature分支的commit 76cada ~62ecb3 都被合并到了master分支。

