
Python之os模块

getcwd()
这条语句以字符串的形式返回当前的工作目录，不必向它传递任何参数，相当于Linux下的pwd命令。

chdir()
chdir()语句和Linux下的cd命令一样用来切换工作目录，调用这个函数时，只要将你想改变的文件路径以字符串的形式作为变量输入即可。

而且它也像cd命令一样，支持相对路径。具体看下面的操作;

listdir()
Lisdir()相当于运行ls命令，然而不一样的是，lisdir()并不打印出目录下的内容，只是将其作为一个列表返回。当然，你也可以指定特定的目录，否则的话，它将会列出当前的目录。

mkdir() and makedirs()
这两个函数和Linux下创建目录的命令一样，它们接受的第一个参数都是创建的目录，当然是以字符串的形式，此外，还可以指定第二个参数来给创建的目录赋予给定的权限。

与mkdir()不一样的是，makedirs()支持创建多层目录，相当于运行mkdir()多次

chmod()
chmod()用来改变目录的权限，输入的第一个参数是要改变的目录，第二个是要改变的权限代号

chown()
chown()用来改变文件的所有者，不过它要求用户和群组的名称都是有效的，例如

这个命令将"test"目录的用户和群组属性都改为ID号为1000的所有者
remove() and removedirs()
remove()用来删除单个文件，可以为它传递一个绝对路径。

删除目录用removedirs()，它可以删除指定目录下的所有内容。

system()
最后介绍的这个命令功能最强大，同时也是最危险的一个。它可以运行Linux系统下的所有命令，只要将命令当做参数传递给它即可。
不过，这里有几点需要注意下，第一，使用这个函数必须在python的终端下，而且，这个函数会占用较多的系统资源，通常是低效的。最重要的是，这个函数可以运行任何命令，意味着它也能够产生任何你想不到的破坏。所以，如果你打算使用这个函数，请谨慎对待并确保它在可控范围内。
现在，使用下面的命令来尝试下system()吧！

当然，你也可以在其中使用管道符命令喽

运行上面的命令，将会使火狐浏览器运行，命令行上将会打出它的进程信息。

